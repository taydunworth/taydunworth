{"version":3,"sources":["images/logo.svg","components/Header.js","components/About.js","components/Buzzwords.js","components/CommunityInvolvement.js","components/Speaking.js","components/Footer.js","components/App.js","components/RJnet.js","components/RJA.js","components/Tombstone.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","state","isExpanded","e","preventDefault","this","setState","className","class","role","aria-label","href","target","rel","icon","faDribbble","aria-hidden","faInstagram","faLinkedinIn","faGithub","faEnvelope","id","to","src","logo","alt","faBars","onClick","handleToggle","faTimes","Component","About","Buzzwords","aria-role","CommunityInvolvement","Speaking","Footer","App","RJnet","faCaretRight","RJA","Tombstone","Boolean","window","location","hostname","match","routing","exact","path","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c8a82dbc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c1ebade0.svg\";","import React, { Component } from 'react';\nimport { NavLink, Link } from \"react-router-dom\";\nimport logo from '../images/logo.svg';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDribbble, faInstagram, faLinkedinIn, faGithub } from '@fortawesome/free-brands-svg-icons';\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\n\nclass Header extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isExpanded: false\n    };\n  }\n\n  handleToggle(e) {\n    e.preventDefault();\n    this.setState({\n      isExpanded: !this.state.isExpanded\n    });\n  }\n\n  render() {\n    const { isExpanded } = this.state;\n\n    return (\n    <header className=\"header\">\n      <div class=\"social-list-container\" role=\"navigation\" aria-label=\"Social profiles\">\n        <ul className=\"social-list\">\n          <li>\n            <a href=\"https://dribbble.com/taydunworth\" target=\"_blank\" rel=\"noopener noreferrer\" aria-label=\"Visit Tay's Dribbble profile\">\n              <FontAwesomeIcon icon={faDribbble} aria-hidden=\"true\" className=\"social-icon\" />\n            </a>\n          </li>\n          <li>\n            <a href=\"https://instagram.com/taylorintheteacups\" target=\"_blank\" rel=\"noopener noreferrer\" aria-label=\"Visit Tay's Instagram\">\n              <FontAwesomeIcon icon={faInstagram} aria-hidden=\"true\" className=\"social-icon\" />\n            </a>\n          </li>\n          <li>\n            <a href=\"https://linkedin.com/in/taydunworth\" target=\"_blank\" rel=\"noopener noreferrer\" aria-label=\"Visit Tay's LinkedIn profile\">\n              <FontAwesomeIcon icon={faLinkedinIn} aria-hidden=\"true\" className=\"social-icon\" />\n            </a>\n          </li>\n          <li>\n            <a href=\"https://github.com/taydunworth\" target=\"_blank\" rel=\"noopener noreferrer\" aria-label=\"Visit Tay's Github profile\">\n                <FontAwesomeIcon icon={faGithub} aria-hidden=\"true\" className=\"social-icon\" />\n            </a>\n          </li>\n          <li>\n            <a href=\"mailto:taydunworth@gmail.com\" rel=\"noopener noreferrer\" aria-label=\"Send Tay an email\">\n                <FontAwesomeIcon icon={faEnvelope} aria-hidden=\"true\" className=\"social-icon\" />\n            </a>\n          </li>\n        </ul>\n      </div>\n      <div id=\"main-nav\" className={`${isExpanded ? \"mobile-active\" : \"\"}`}>\n        <Link to=\"/\" aria-label=\"Tay Dunworth's site home page\"><img src={logo} className=\"logo\" alt=\"Tay Dunworth logo\" /></Link>\n        <FontAwesomeIcon icon={faBars} aria-hidden=\"true\" id=\"mobile-nav-open\" onClick={e => this.handleToggle(e)} />\n        <FontAwesomeIcon icon={faTimes} aria-hidden=\"true\" id=\"mobile-nav-close\" onClick={e => this.handleToggle(e)} />\n        <nav aria-label=\"Main navigation\">\n          <ul className={`collapsed ${isExpanded ? \"is-expanded\" : \"\"}`}>\n            <li>\n              <a href=\"#about-section\">About</a>\n            </li>\n            <li>\n              <a href=\"#buzzwords-section\">Buzzwords</a>\n            </li>\n            <li>\n              <a href=\"#community-section\">Community</a>\n            </li>\n            <li>\n              <a href=\"#speaking-section\">Speaking</a>\n            </li>\n            {/* <li>\n              <a href=\"#resume\">Resume</a>\n            </li> */}\n          </ul>\n        </nav>\n      </div>\n    </header>\n    )\n  }\n}\n\nexport default Header;","import React from 'react';\nimport '../styles/App.scss';\n\nfunction About() {\n  return (\n    <section id=\"about\">\n      <h2>Get to Know Me</h2>\n      <p>I’m a UI/UX designer and front-end developer based in sunny St. Petersburg Florida with an affinity for cups of tea, Disney, and kind people.</p>\n      <p>My specialties include drafting wireframes, creating interactive prototypes, and translating designs into code.</p>\n      <p>I grew up in small-town Indiana with professional endeavors landing me in Indianapolis, New York City, and presently Tampa Bay, Florida. My experience ranges from agency work specializing in marketing and web development to product work with a focus in interfaces for mobile and web applications.</p>\n      <p>In my free time, I’m a regular at Walt Disney World and local craft breweries, and I curate Disney-inspired content on <a href=\"https://instagram.com/taylorintheteacups\" target=\"_blank\" rel=\"noopener noreferrer\">Instagram</a>. I also sell handmade items on <a href=\"https://etsy.com/shop/taydunworth\" target=\"_blank\" rel=\"noopener noreferrer\">Etsy</a>.</p>\n    </section>\n  );\n}\n\nexport default About;","import React from 'react';\nimport '../styles/App.scss';\n\nfunction Buzzwords() {\n  return (\n    <section id=\"buzzwords\">\n        <h2>Buzzwords</h2>\n        <div class=\"filter-tool\" aria-role=\"\">\n            {/* <p>filter by:</p> */}\n            <ul>\n                <li class=\"software\">software</li>\n                <li class=\"development\">development</li>\n                <li class=\"etc\">etc.</li>\n            </ul>\n        </div>\n        <ul>\n            <li class=\"software\">Figma</li>\n            <li class=\"development\">JavaScript</li>\n            <li class=\"software\">Adobe Illustrator</li>\n            <li class=\"etc\">Web Accessibility</li>\n            <li class=\"development\">HTML</li>\n            <li class=\"software\">Invision</li>\n            <li class=\"development\">CSS</li>\n            <li class=\"etc\">Public Speaking</li>\n            <li class=\"development\">Sass</li>\n            <li class=\"development\">AngularJS</li>\n            <li class=\"software\">Adobe Photoshop</li>\n            <li class=\"development\">XAML</li>\n            <li class=\"software\">Adobe XD</li>\n            <li class=\"etc\">Digital Illustration</li>\n            <li class=\"development\">Xamarin.Forms</li>\n            <li class=\"etc\">Digital Photography</li>\n            <li class=\"software\">Adobe Lightroom</li>\n            <li class=\"development\">React</li>\n            <li class=\"software\">Adobe InDesign</li>\n            <li class=\"development\">TypeScript</li>\n            <li class=\"software\">Adobe Premiere</li>\n            <li class=\"software\">Adobe After Effects</li>\n            <li class=\"development\">LESS</li>\n        </ul>\n    </section>\n  );\n}\n\nexport default Buzzwords;","import React from 'react';\nimport '../styles/App.scss';\n\nfunction CommunityInvolvement() {\n  return (\n    <section id=\"community\">\n      <h2>Community Involvement</h2>\n      <ul>\n        <li><strong>Tampa Lead</strong>, Women Who Code</li>\n        <li><strong>Co-organizer and Instructor</strong>, Suncoast Developers Guild Jr.</li>\n        <li><strong>Conference Organizer</strong>, Tampa Bay Startup Week</li>\n      </ul>\n    </section>\n  );\n}\n\nexport default CommunityInvolvement;","import React from 'react';\nimport '../styles/App.scss';\n\nfunction Speaking() {\n  return (\n    <section id=\"speaking\">\n      <h2>Speaking</h2>\n      <ul>\n        <li><strong>Intro to XAML and Xamarin.Forms</strong> – Hosted by Suncoast Developers Guild</li>\n        <li><strong>Intro to Crash Courses and Public Speaking</strong> – Hosted by Suncoast Developers Guild</li>\n        <li><strong>Modern Features for Javascript: Foundations of ECMAScript (ES6+)</strong> – Hosted by Women Who Code Tampa</li>\n        <li><strong>Responsive Layouts with Bootstrap, Flexbox, and CSS Grid</strong> – Hosted by JoomlaDay Florida 2019</li>\n        <li><strong>“Just Do This,” “It’s Easy,” and Other Ways You’re Discouraging Your Developers</strong> – Hosted by Suncoast.JS</li>\n        <li><strong>Intro to CSS</strong> – Hosted by Suncoast Developers Guild</li>\n        <li><strong>Breaking Up With Design</strong> – Hosted by CMS Summit 2018</li>\n        <li><strong>Should Designers Code?</strong> – Hosted by Suncoast.JS</li>\n      </ul>\n    </section>\n  );\n}\n\nexport default Speaking;","import React from 'react';\nimport '../styles/App.scss';\n\nfunction Footer() {\n  return (\n    <footer>\n        <p>Designed with Figma and Developed with React by Taylor Dunworth</p>\n        <p><a href=\"https://github.com/taydunworth/taydunworth\" target=\"_blank\" rel=\"noopener noreferrer\">Check out my code!</a></p>\n    </footer>\n  );\n}\n\nexport default Footer;","import React from 'react';\nimport Header from './Header';\nimport About from './About';\nimport Projects from './Projects';\nimport Buzzwords from './Buzzwords';\nimport CommunityInvolvement from './CommunityInvolvement';\nimport Speaking from './Speaking';\nimport Footer from './Footer';\nimport '../styles/App.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <main>\n        <div className=\"jumbotron\">\n          <h1 className=\"highlight\" id=\"intro-heading\">UI/UX Designer + Front-End Developer</h1>\n          <a href=\"mailto:taydunworth@gmail.com\" rel=\"noopener noreferrer\" className=\"btn\">Let's connect via email</a>\n        </div>\n        <span class=\"anchor\" id=\"about-section\" aria-hidden=\"true\"></span>\n        <About />\n        {/* <Projects /> */}\n        <span class=\"anchor\" id=\"buzzwords-section\" aria-hidden=\"true\"></span>\n        <Buzzwords />\n        <span class=\"anchor\" id=\"community-section\" aria-hidden=\"true\"></span>\n        <CommunityInvolvement />\n        <span class=\"anchor\" id=\"speaking-section\" aria-hidden=\"true\"></span>\n        <Speaking />\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport Header from './Header';\nimport Footer from './Footer';\nimport '../styles/App.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretRight } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from \"react-router-dom\";\n\nfunction RJnet() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <main>\n        <p className=\"breadcrumbs\">\n            <Link to=\"/\">Home</Link>\n            <FontAwesomeIcon icon={faCaretRight} aria-hidden=\"true\" className=\"arrow-icon\" />\n            <a href=\"/#projects\">Projects</a>\n            <FontAwesomeIcon icon={faCaretRight} aria-hidden=\"true\" className=\"arrow-icon\" />\n            RJnet Intranet Redesign\n        </p>\n        <h1>RJnet Intranet Redesign</h1>\n        <p>Due to the confidential nature of the project, visual assets related to my work on this cannot be distributed publicly.</p>\n\n        <h2>Summary of Project</h2>\n        <p>Raymond James’s Intranet service needed to be converted from SharePoint to Sitecore, which required a complete redesign and rebuild of the application. As an application used by over 10,000 employees daily, the project included several hurdles such as a large quantity of stakeholders and user personas and the request for a modern styles but the need for familiar visuals.</p>\n\n        <h2>My Role</h2>\n        <p>As the lead designer for the project, I reviewed contractors’ wireframes and acted as the liaison between the product owner and the designers to communicate requirements and revisions. The wireframes were made up of individual components that were decided upon by myself, the product owner, and the business analyst.</p>\n        <p>When wireframes and components were approved by the product owner, I created high-fidelity mockups and a fully-styled component library that I presented to the product owners on a weekly basis until all component and page type designs were complete.</p>\n        <p>After creating the high-fidelity mockups, interactive prototypes were created and used for in-person testing purposes with a variety of user types. I played a role in the development of the questions and tasks for the users.</p>\n        <p>Once approved, I collaborated with the front-end and back-end developers to build out each component. Within this capacity, I played a role in the approval of each component’s developed appearance and functionality and provided feedback in the form of verbal explanation and written code to the developers as needed.</p>\n\n        <h2>The Deliverables</h2>\n        <ul>\n            <li>Visual library of each component and written functional requirements</li>\n            <li>Style guide for each component</li>\n            <li>High-fidelity mockups of example pages</li>\n        </ul>\n\n        <h2>Tools and Technologies Used</h2>\n        <ul>\n            <li>Adobe XD</li>\n            <li>Adobe InDesign</li>\n            <li>HTML</li>\n            <li>Sass</li>\n            <li>Sitecore</li>\n            <li>Invision</li>\n        </ul>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default RJnet;\n","import React from 'react';\nimport Header from './Header';\nimport Footer from './Footer';\nimport '../styles/App.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretRight } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from \"react-router-dom\";\n\nfunction RJA() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <main>\n        <p className=\"breadcrumbs\">\n            <Link to=\"/\">Home</Link>\n            <FontAwesomeIcon icon={faCaretRight} aria-hidden=\"true\" className=\"arrow-icon\" />\n            <a href=\"/#projects\">Projects</a>\n            <FontAwesomeIcon icon={faCaretRight} aria-hidden=\"true\" className=\"arrow-icon\" />\n            Raymond James and Associates Branch Websites\n        </p>\n        <h1>Raymond James and Associates Branch Websites</h1>\n        <p>Within Raymond James and Associates, there are over 500 branches in need of a web presence. While many of the branches have websites, they were all built as static pages using non-reusable components and in a variety of styles that were inconsistent with the Raymond James brand.</p>\n\n        <h2>Summary of Project</h2>\n        <p>As the company grew and increased the number of websites that needed built, the existing process proved to be inefficient and out of touch with modern technological capabilities. This project served as the blueprint for moving all of the branch websites from static properties to the content management system Sitecore. From a client-facing perspective, the goal was to provide the branches with unique websites that represent their location while still providing guard rails that keep the style of each site consistent.</p>\n\n        <h2>My Role</h2>\n        <p>I was fortunate to be highly involved in each phase of this project – the initial planning, design, and build. The team I collaborated with consisted of an account manager, digital strategy manager, creative director, copywriter, business analyst, infrastructure architect, back-end developer, and front-end developer.</p>\n        <p>Initially, I worked with an account manager to determine personas for each of the types of branch owners and their specific content needs. From there, we decided upon a list of components that would be available to the branches.</p>\n        <p>Once the components were decided upon, I worked with the digital strategy manager to determine user journeys and appropriate sitemaps for each persona.</p>\n        <p>I spent the next phase of the project designing low-fidelity mockups of each component with sample website designs for the four home page layout options we were choosing to provide to the branches based on the personas. Once approved, I created interactive prototypes of each component for the developers to review and use as guidelines for the build. In addition to this, the developers also received a list of requirements written by myself and the business analyst and a style guide created by me.</p>\n        <p>In some cases, I built pieces of the components using HTML, Sass, JavaScript, Bootstrap, and Yarn. In other cases, I reviewed the work completed by the developers and contributed as needed to stylistic and functional revisions.</p>\n        <p>When all components were built and approved, demo websites were created to showcase options for the branches. I then worked with the infrastructure architect, business analyst, and account manager to determine the migration process of old branch websites to new branch websites. My role in this phase included assisting in building a form for branches to fill out to make their custom content choices, building an online catalog of image options, and writing the documentation for the front-end developers and content managers to follow for building a branch website.</p>\n\n        <h2>The Deliverables</h2>\n        <ul>\n            <li>Component wireframes</li>\n            <li>High-fidelity component mockups</li>\n            <li>High-fidelity sample/demo websites mockups</li>\n            <li>Interactive prototypes of components and websites</li>\n            <li>Style guide</li>\n            <li>Component stylesheets</li>\n            <li>Sample/demo websites</li>\n            <li>Documentation on the standards and process for building a branch website</li>\n        </ul>\n\n        <h2>Tools and Technologies Used</h2>\n        <ul>\n            <li>Adobe XD</li>\n            <li>Invision</li>\n            <li>Sass</li>\n            <li>HTML</li>\n            <li>Bootstrap</li>\n            <li>JavaScript</li>\n            <li>Yarn</li>\n            <li>Sitecore</li>\n        </ul>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default RJA;\n","import React from 'react';\nimport Header from './Header';\nimport Footer from './Footer';\nimport '../styles/App.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretRight } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from \"react-router-dom\";\n\nfunction Tombstone() {\n  return (\n    <div className=\"App\">\n        <Header />\n        <main>\n            <p className=\"breadcrumbs\">\n                <Link to=\"/\">Home</Link>\n                <FontAwesomeIcon icon={faCaretRight} aria-hidden=\"true\" className=\"arrow-icon\" />\n                <a href=\"/#projects\">Projects</a>\n                <FontAwesomeIcon icon={faCaretRight} aria-hidden=\"true\" className=\"arrow-icon\" />\n                Raymond James Financial Tombstone Redesign\n            </p>\n            <h1>Raymond James Financial Tombstone Redesign</h1>\n            <h2>Summary of Project</h2>\n            <p>Within the financial industry, tombstones act as trophies for advisors and firms to showcase to their transactions. RaymondJames.com features thousands of digital tombstones on its website, and the process of creating tombstones was inefficient and designed with an outdated style. The marketing department at Raymond James requested a sleeker design and an improved process for creation.</p>\n\n            <h2>My Role</h2>\n            <p>I worked directly with two account managers to develop a plan for how to improve the creation process and overall visual appeal of the tombstones. Included in this, I documented each possible variation of current tombstones for both the Capital Markets and Public Finance divisions of Raymond James. For example, it was found, in some cases, that the division might want to include up to three company logos or choose to list if the transaction occurred across international borders.</p>\n            <p>When all variations were documented, I designed wireframes for each of these showcasing the expected layouts. Once approved by the account managers and clients, I translated the wireframes into high-fidelity mockups.</p>\n            <p>Aside from the design of the tombstone, we needed to determine a new process for the tombstones to be built. In the current process, the design team within the marketing department would spend up to 30 minutes designing each tombstone. On average, a design job would include making up to 30 tombstones. On the high end, a designer might be required to design 70. With a smaller staff, this process was holding back the designers from tackling larger, more innovative projects.</p>\n            <p>To alleviate this, I collaborated with the two account managers and a full-stack developer to create a new process that would involve the account managers using a web application to create the tombstones by entering the text and logos into predetermined spaces. Dropdowns, checkboxes, and radio buttons would also exist to toggle components such as number of logos and type of transaction, on and off.</p>\n\n            <h2>The Deliverables</h2>\n            <ul>\n                <li>Wireframes for the tombstones</li>\n                <li>Wireframe for tombstone builder</li>\n                <li>Requirements for the tombstone builder</li>\n                <li>High-fidelity mockups of tombstones</li>\n            </ul>\n\n            <h2>Tools and Technologies Used</h2>\n            <ul>\n                <li>Adobe XD</li>\n            </ul>\n        </main>\n        <Footer />\n    </div>\n  );\n}\n\nexport default Tombstone;\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport RJnet from './components/RJnet';\nimport RJA from './components/RJA';\nimport Tombstone from './components/Tombstone';\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nconst routing = (\n    <Router>\n        <Route exact path=\"/\" component={App} />\n        <Route path=\"/rjnet\" component={RJnet} />\n        <Route path=\"/rja\" component={RJA} />\n        <Route path=\"/tombstone\" component={Tombstone} />\n    </Router>\n  )\n\nReactDOM.render(routing, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}